
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.JScrollPane;
import javax.swing.event.ListSelectionEvent;
import javax.swing.event.ListSelectionListener;

import com.dropbox.core.DbxException;
import com.dropbox.core.DbxRequestConfig;
import com.dropbox.core.v2.DbxClientV2;
import com.dropbox.core.v2.files.FileMetadata;

import com.dropbox.core.v2.users.FullAccount;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.io.InputStream;
import java.io.PrintWriter;
import java.util.logging.Level;
import java.util.logging.Logger;

public class NotesManager extends javax.swing.JInternalFrame implements ListSelectionListener {

    JList<String> notesList;
    DefaultListModel<String> model;
    String notesLocation;

    private static final String ACCESS_TOKEN = "ildOTnAa-xAAAAAAAAAAChzn_NGr86BnrNfglVdNjmVICkp0eiuj0VVjXSa52pIW";

    public NotesManager() {
        initComponents();
        notesList = new JList<>();
        model = new DefaultListModel<>();
        notesList.setModel(model);
        jPanel1.add(new JScrollPane(notesList));
        notesLocation = new JFileChooser().getFileSystemView().getDefaultDirectory().toString();
        jLabel1.setText("Notes Location : " + notesLocation);
        notesList.addListSelectionListener(this);
        if (NoteManager.getNotes(notesLocation).size() > 0) {
            for (String name : NoteManager.getNotes(notesLocation)) {
                model.addElement(name.replace(".note", ""));
            }
            notesList.setSelectedIndex(0);
        }

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @Override
    public void valueChanged(ListSelectionEvent e) {
        if (notesList.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a Note");
            return;
        }
        String name = notesList.getSelectedValue();
        String content = NoteManager.loadNote(notesLocation, name + ".note");
        jTextArea1.setText(content);
    }


    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        btnEditNote = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        btnSaveNote = new javax.swing.JButton();
        btnAddNewNote = new javax.swing.JButton();
        btnDeleteNote = new javax.swing.JButton();
        dropbox = new javax.swing.JButton();

        setClosable(true);
        setResizable(true);

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setLayout(new java.awt.BorderLayout());

        btnEditNote.setText("Edit Note");
        btnEditNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditNoteActionPerformed(evt);
            }
        });

        jLabel1.setText("jLabel1");

        btnSaveNote.setText("Save Note");
        btnSaveNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveNoteActionPerformed(evt);
            }
        });

        btnAddNewNote.setText("Add New Note");
        btnAddNewNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddNewNoteActionPerformed(evt);
            }
        });

        btnDeleteNote.setText("Delete Note");
        btnDeleteNote.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteNoteActionPerformed(evt);
            }
        });

        dropbox.setText("Save to Dropbox");
        dropbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dropboxActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(193, 193, 193)
                .addComponent(dropbox, javax.swing.GroupLayout.PREFERRED_SIZE, 218, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnSaveNote)
                .addGap(186, 186, 186))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(27, 27, 27)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(12, 12, 12)
                                .addComponent(btnAddNewNote)
                                .addGap(77, 77, 77)
                                .addComponent(btnEditNote)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 683, Short.MAX_VALUE)
                                .addComponent(btnDeleteNote)))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 171, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAddNewNote)
                    .addComponent(btnDeleteNote)
                    .addComponent(btnEditNote))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 206, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSaveNote)
                    .addComponent(dropbox))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnEditNoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditNoteActionPerformed
        if (notesList.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a Note");
            return;
        }
        String name = notesList.getSelectedValue();
        String content = NoteManager.loadNote(notesLocation, name + ".note");
        jTextArea1.setText(content);
    }//GEN-LAST:event_btnEditNoteActionPerformed

    private void btnSaveNoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveNoteActionPerformed
        if (notesList.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a Note");
            return;
        }
        String name = notesList.getSelectedValue();
        String content = jTextArea1.getText();
        NoteManager.saveNote(notesLocation, name + ".note", content);
        JOptionPane.showMessageDialog(this, "Note Saved..");
    }//GEN-LAST:event_btnSaveNoteActionPerformed

    private void btnAddNewNoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddNewNoteActionPerformed
        String name = JOptionPane.showInputDialog("Enter Name : ");
        if (name != null) {
            model.addElement(name);
        }
    }//GEN-LAST:event_btnAddNewNoteActionPerformed

    private void btnDeleteNoteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteNoteActionPerformed
        if (notesList.getSelectedIndex() == -1) {
            JOptionPane.showMessageDialog(this, "Please select a Note");
            return;
        }
        String name = notesList.getSelectedValue();
        model.removeElement(name);
        NoteManager.deleteNote(notesLocation, name + ".note");
    }//GEN-LAST:event_btnDeleteNoteActionPerformed

    private void dropboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dropboxActionPerformed
        try {
            //doStuff(evt);
        } catch (Exception ex) {
            Logger.getLogger(NotesManager.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_dropboxActionPerformed

   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAddNewNote;
    private javax.swing.JButton btnDeleteNote;
    private javax.swing.JButton btnEditNote;
    private javax.swing.JButton btnSaveNote;
    private javax.swing.JButton dropbox;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    // End of variables declaration//GEN-END:variables
}
